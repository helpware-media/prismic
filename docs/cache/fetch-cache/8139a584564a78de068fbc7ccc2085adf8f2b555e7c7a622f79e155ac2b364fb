{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","cache-control":"max-age=315360000","connection":"keep-alive","content-encoding":"gzip","content-type":"application/json","date":"Wed, 13 Mar 2024 12:09:24 GMT","transfer-encoding":"chunked","via":"1.1 c43915e0cad14ee7685e5f74a99ce93c.cloudfront.net (CloudFront)","x-amz-apigw-id":"UkSaRG3doAMFw4w=","x-amz-cf-id":"mIcG_fwcK1_XIMcnXakQ3SAci04sH8CFLhcqWsYg_lNajyVICupEPA==","x-amz-cf-pop":"FRA60-P3","x-amzn-requestid":"36cb6eca-632f-48a5-8fc8-cde8a60d3f74","x-amzn-trace-id":"Root=1-65f19774-726e0fa842a50d2437658e04","x-cache":"Miss from cloudfront","x-local-cache":"MISS","x-ratelimit-limit":"200","x-ratelimit-remaining":"199","x-ratelimit-reset":"1710331765"},"body":"","status":200,"url":"https://testwebsitefor.cdn.prismic.io/api/v2/documents/search?q=%5B%5Bat%28document.type%2C+%22page%22%29%5D%5D&pageSize=100&ref=ZfGU2REAACAA6xMi&routes=%5B%7B%22type%22%3A%22page%22%2C%22path%22%3A%22%2F%3Auid%22%7D%2C%7B%22type%22%3A%22page%22%2C%22uid%22%3A%22home%22%2C%22path%22%3A%22%2F%22%7D%2C%7B%22type%22%3A%22settings%22%2C%22path%22%3A%22%2F%22%7D%2C%7B%22type%22%3A%22navigation%22%2C%22path%22%3A%22%2F%22%7D%5D"},"revalidate":31536000,"tags":["prismic"]}