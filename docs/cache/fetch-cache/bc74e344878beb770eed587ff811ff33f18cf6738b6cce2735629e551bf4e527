{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","cache-control":"max-age=315360000","connection":"keep-alive","content-encoding":"gzip","content-type":"application/json","date":"Wed, 13 Mar 2024 11:53:26 GMT","transfer-encoding":"chunked","via":"1.1 231be1c97cc722fa08b64d21072ebfac.cloudfront.net (CloudFront)","x-amz-apigw-id":"UkQEiEOGoAMFfhw=","x-amz-cf-id":"FLkzywvmfRh_3t0H41BZMSc1X8tgmhuwOI_jbtdhNVmwK1QRBAZLhQ==","x-amz-cf-pop":"FRA60-P3","x-amzn-requestid":"ff2ea034-2241-4437-ba14-42dca36ab6b0","x-amzn-trace-id":"Root=1-65f193b6-7870c6b17fef3990172a174b","x-cache":"Miss from cloudfront","x-local-cache":"MISS","x-ratelimit-limit":"200","x-ratelimit-remaining":"199","x-ratelimit-reset":"1710330807","x-robots-tag":"noindex, noarchive, nosnippet"},"body":"","status":200,"url":"https://testwebsitefor.cdn.prismic.io/api/v2/documents/search?q=%5B%5Bat%28document.type%2C+%22page%22%29%5D%5D&pageSize=100&ref=ZfGQkBEAACAA6v-W&routes=%5B%7B%22type%22%3A%22page%22%2C%22path%22%3A%22%2F%3Auid%22%7D%2C%7B%22type%22%3A%22page%22%2C%22uid%22%3A%22home%22%2C%22path%22%3A%22%2F%22%7D%2C%7B%22type%22%3A%22settings%22%2C%22path%22%3A%22%2F%22%7D%2C%7B%22type%22%3A%22navigation%22%2C%22path%22%3A%22%2F%22%7D%5D"},"revalidate":5,"tags":[]}